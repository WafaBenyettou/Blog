/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2023-06-07 03:44:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class shodan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Shodan Map</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.css\" type=\"text/css\" />\n");
      out.write("    <style>\n");
      out.write("        #map {\n");
      out.write("            height: 600px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <h1>Shodan Map</h1>\n");
      out.write("    <div id=\"map\"></div>\n");
      out.write("\n");
      out.write("    <script src=\"https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        mapboxgl.accessToken = 'pk.eyJ1Ijoid2FmYWJlbnkiLCJhIjoiY2xpbDVxdXN1MG9zdjNla2RmN29hdW00YSJ9.IN6MEc3j0VmVkJqKijmulg';\n");
      out.write("\n");
      out.write("        var map = new mapboxgl.Map({\n");
      out.write("            container: 'map',\n");
      out.write("            style: 'mapbox://styles/mapbox/streets-v11',\n");
      out.write("            center: [-122.4194, 37.7749],\n");
      out.write("            zoom: 2\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Replace with your Shodan API key\n");
      out.write("        var apiKey = 'imjJFXulzaB22NXcq13S6K2TsB0RDyPf';\n");
      out.write("\n");
      out.write("        // Make an API request to Shodan for the map data\n");
      out.write("        var apiUrl = 'https://api.shodan.io/shodan/ports?key=' + apiKey;\n");
      out.write("        fetch(apiUrl) // Modify the query to match your needs\n");
      out.write("        .then(response => response.json())\n");
      out.write("        .then(data => {\n");
      out.write("          data.matches.forEach(match => {\n");
      out.write("            var ip = match.ip_str;\n");
      out.write("            var latitude = match.location.latitude;\n");
      out.write("            var longitude = match.location.longitude;\n");
      out.write("\n");
      out.write("            // Create a marker for each IP address\n");
      out.write("            new mapboxgl.Marker()\n");
      out.write("              .setLngLat([longitude, latitude])\n");
      out.write("              .setPopup(new mapboxgl.Popup().setHTML('<h3>' + ip + '</h3>'))\n");
      out.write("              .addTo(map);\n");
      out.write("          });\n");
      out.write("        })\n");
      out.write("        .catch(error => {\n");
      out.write("          console.log(error);\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
